# data "template_file" "bigip_do_json" {
#   template = file("${path.module}/do-bigiq.json")
  
#   vars = {
#     admin_user     = var.user_name 
#     admin_password = var.user_password
#     targethost     = aws_network_interface.mgmt[0].private_ip
#     targetsshkey   = var.targetsshkey
#   }
# }

# # Run REST API for configuration
# resource "local_file" "bigip_do_file" {
#   content  = data.template_file.bigip_do_json.rendered
#   filename = "${path.module}/${var.rest_bigip_do_file}"
# }

# resource "null_resource" "bigip01_DO" {
#   depends_on = [aws_instance.f5_bigip]
#   # Running DO REST API
#   provisioner "local-exec" {
#     command = <<-EOF
#       #!/bin/bash
#       sleep 420
#       curl -ks -X ${var.rest_do_method} https://${var.bigiq_mgmt_ip}${var.rest_do_uri} -u ${var.user_name}:${var.user_password} -d @${var.rest_bigip_do_file}
#       x=1; while [ $x -le 30 ]; do STATUS=$(curl -s -k -X GET https://${var.bigiq_mgmt_ip}/mgmt/shared/declarative-onboarding/task -u ${var.user_name}:${var.user_password}); if ( echo $STATUS | grep "OK" ); then break; fi; sleep 10; x=$(( $x + 1 )); done
#       sleep 10
#     EOF
#   }
# }

#
# Create BIG-IP
#
# module bigip {
#   source = "./modules/bigip"

#   owner       = var.owner
#   environment = var.environment
#   random_id   = random_id.id.hex

#   //f5_instance_count           = length(local.setup.aws.azs)
#   f5_instance_count           = var.f5_instance_count
#   ec2_key_name                = var.ec2_key_name
#   aws_secretmanager_secret_id = aws_secretsmanager_secret.bigip.id

#   mgmt_subnet_security_group_ids = [
#     module.security.web_server_sg,
#     module.security.web_server_secure_sg,
#     module.security.ssh_secure_sg,
#     module.security.bigip_mgmt_secure_sg
#   ]

#   vpc_mgmt_subnet_ids = module.vpc.public_subnets
#   f5_ami_search_name  = var.f5_ami_search_name
# }

# data "template_file" "startup_script" {
#   template = "${file("${path.module}/startup-script.tpl")}"
#   vars = {
#     admin_user     = var.admin_user 
#     admin_password = var.admin_password
#     targethost     = "${join(",", flatten(module.bigip.mgmt_addresses))}"
#     targetsshkey   = var.targetsshkey
#     bigiq_mgmt_ip  = var.bigiq_mgmt_ip
#     }
# }

# data "template_file" "bigip_do_json" {
#   template = file("${path.module}/do-bigiq.json")
  
#   vars = {
#     admin_user     = var.admin_user 
#     admin_password = var.admin_password
#     targethost     = "${join(",", flatten(module.bigip.mgmt_addresses))}"
#     targetsshkey   = var.targetsshkey
#   }
#   depends_on = [module.bigip]
# }

# # Run REST API for configuration
# resource "local_file" "bigip_do_file" {
#   depends_on = [module.bigip]
#   content  = data.template_file.bigip_do_json.rendered
#   filename = "${path.module}/bigip.do.json"
# }

# resource "null_resource" "bigip01_DO" {
#   depends_on = [module.bigip]
#   # Running DO REST API
#   provisioner "local-exec" {
#     command = <<-EOF
#       #!bin/bash
#       sleep 420
#       json=$(curl -ks -X POST -d '{"username": '${var.admin_user}', "password": '${var.admin_password}', "loginProviderName":"local"}' https://${var.bigiq_mgmt_ip}/mgmt/shared/authn/login)
#       token=$(echo $json | jq -r '.token.token')
#       echo $token
#       onboard=$(curl -ks -X POST -H "X-F5-Auth-Token: $token" https://${var.bigiq_mgmt_ip}/mgmt/shared/declarative-onboarding -d @do-bigiq.json)
#       echo $onboard | jq
#       taskid=$(echo $onboard | jq -r '.id' )
#       #echo $taskid
#       #x=1; while [ $x -le 30 ]; do STATUS=$(curl -s -k -X GET -H "X-F5-Auth-Token: $token" https://${var.bigiq_mgmt_ip}/mgmt/shared/declarative-onboarding/task/$taskid); if ( echo $STATUS | grep "OK" ); then break; fi; sleep 10; x=$(( $x + 1 )); done
#       #sleep 10
#     EOF
#   }
# }

# resource "null_resource" "bigip01_DO" {
#   depends_on = [module.bigip]
#   # Running DO REST API
#   provisioner "local-exec" {
#     command = <<-EOF
#       #!bin/bash
#       #sleep 420
#       curl -ks -X POST https://${var.bigiq_mgmt_ip}/mgmt/shared/declarative-onboarding -u ${var.admin_user}:${var.admin_password} -d @${var.rest_bigip_do_file}
#       x=1; while [ $x -le 30 ]; do STATUS=$(curl -s -k -X GET https://${var.bigiq_mgmt_ip}/mgmt/shared/declarative-onboarding/task -u ${var.admin_user}:${var.admin_password}); if ( echo $STATUS | grep "OK" ); then break; fi; sleep 10; x=$(( $x + 1 )); done
#       sleep 10
#     EOF
#   }
# }
